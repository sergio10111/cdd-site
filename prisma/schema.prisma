// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model AuthSession {
  id          String   @id @unique @db.VarChar(255)
  user_id      String  @db.VarChar(255)
  active_expires BigInt
  idle_expires  BigInt
  auth_user        AuthUser     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@map("sessions")
}

model AuthUser {
  id            String    @id @unique @db.VarChar(255)
  auth_session  AuthSession[]
  auth_key      AuthKey[]
  name          String?   @db.VarChar(255)
  username      String?   @unique @db.VarChar(255)
  password      String?   @db.VarChar(255)
  email         String?   @unique
  image         String?   @db.VarChar(255)
  role          Role      @default(USER)
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @default(now()) @map("updated_at")
  crops         Crop[]

  @@map("users")
}

model AuthKey {
  id          String   @id @unique @db.VarChar(255)
  hashed_password String? @db.VarChar(255)
  user_id      String   @db.VarChar(255)
  primary_key  Boolean
  expires      BigInt?
  auth_user    AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("keys")
}

enum Role {
  USER
  ADMIN
}

model Crop {
  id          String   @id @unique @db.VarChar(255)
  name        String   @db.VarChar(255)
  image       String?  @db.VarChar(255)
  health      String?  @db.VarChar(255)
  dateInspected DateTime? @map("date_inspected")
  disease     String?  @db.VarChar(255) 
  userId      String   @map("user_id")
  role        Role     @default(USER)
  user        AuthUser     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("crops")
}
